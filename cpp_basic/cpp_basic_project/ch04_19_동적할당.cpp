//정적할당 : 변수를 선언하면 자료 저장을 위한 기억 장소가 할당된다. (스택)
//동적할당 : 프로그램 실행 중에 필요한 만큼 기억 장소를 요청하는 것, 기억 장소를 할당하고 할당된 기억 장소의 주소를 포인터 변수에 저장(힙)
// 자료형 *포인터변수 = new 자료형[개수];

// 동적할당으로 확보한 기억 장소는 모두 사용하고 나서 그만 사용하겠다고 해제해야 함
// 해제하지 않으면 프로그램이 종료될 때까지 동적 할당을 확보하고 있는 것
// delete 포인터 변수;   (하나의 기억 장소 해제 시)
// delete [] 포인터 변수 :  (여러 개의 기억 장소 해제 시)

#include <iostream>
using namespace std;

int main()
{
	int* pi = new int;

	*pi = 100;

	cout << *pi << endl;

	delete pi;

	int* pj = new int[3];
	int i;

	pj[0] = 10;
	pj[1] = 20;
	pj[2] = 30;

	for (i = 0; i < 3; i++)
		cout << pj[i] << endl;

	delete[] pj;

	return 0;

}

//100
//10
//20
//30